name: CI ReUse Dev
on:
  workflow_call:
    inputs:
      appType:
        required: true
        type: string
      appName:
        required: true
        type: string
      docker_build:
        required: true
        type: string
    secrets:
      vault_token:
        required: true
jobs:
  Build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - run: npm install
        name: Download NodeJS Dependencies
        if: inputs.appType == 'nodejs'
      - run: mvn package
        name: Download Maven Dependencies
        if: inputs.appType == 'maven'
      - name: Import Secrets
        if: inputs.docker_build == 'true'
        id: import-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: http://vault-int.rdevopsb84.online:8200/
          token: ${{ secrets.vault_token }}
          secrets: |
            roboshop-infra/data/azure-sp ARM_CLIENT_ID | ARM_CLIENT_ID ;
            roboshop-infra/data/azure-sp ARM_CLIENT_SECRET | ARM_CLIENT_SECRET ;
            roboshop-infra/data/azure-sp ARM_TENANT_ID | ARM_TENANT_ID ;
            roboshop-infra/data/azure-sp ARM_SUBSCRIPTION_ID | ARM_SUBSCRIPTION_ID ;
            roboshop-infra/data/sonarqube token | SONAR_TOKEN ;

      - name: SonarQube Scan - Java
        if: inputs.docker_build == 'true' && inputs.appType == 'maven'
        run: |
          echo /home/github/sonar-scanner-7.1.0.4889-linux-x64/bin/sonar-scanner -Dsonar.host.url=http://sonarqube.rdevopsb84.online:9000 -Dsonar.token=${SONAR_TOKEN} -Dsonar.projectKey=roboshop-${{ inputs.appName }} -Dsonar.java.binaries=./target/
          ### -Dsonar.qualitygate.wait=true
          ### Above option to fail the pipeline, As of now we are not doing it.

      - name: SonarQube Scan - NonJava
        if: inputs.docker_build == 'true' && inputs.appType != 'maven'
        run: |
          echo /home/github/sonar-scanner-7.1.0.4889-linux-x64/bin/sonar-scanner -Dsonar.host.url=http://sonarqube.rdevopsb84.online:9000 -Dsonar.token=${SONAR_TOKEN} -Dsonar.projectKey=roboshop-${{ inputs.appName }}

      - name: CheckMarx SAST Scan
        if: inputs.docker_build == 'true'
        run: |
          echo cx scan create -s . --project-name roboshop-${{ inputs.appName }} --scan-types sast

      - name: CheckMarx SCA Scan
        if: inputs.docker_build == 'true'
        run: |
          echo cx scan create --project-name roboshop-${{ inputs.appName }} -s . --scan-types sca

      - name: Docker Build
        if: inputs.docker_build == 'true'
        run: |
          az login --service-principal --username "${ARM_CLIENT_ID}" --password "${ARM_CLIENT_SECRET}" --tenant "${ARM_TENANT_ID}"
          az acr login --name roboshopb84
          docker build -t roboshopb84.azurecr.io/roboshop-${{ inputs.appName }}:${{ github.sha }} .
          trivy image roboshopb84.azurecr.io/roboshop-${{ inputs.appName }}:${{ github.sha }} --severity HIGH,CRITICAL --ignore-unfixed --exit-code 1

      - name: Docker Push
        if: inputs.docker_build == 'true'
        run: |
          az login --service-principal --username "${ARM_CLIENT_ID}" --password "${ARM_CLIENT_SECRET}" --tenant "${ARM_TENANT_ID}"
          az acr login --name roboshopb84
          docker push roboshopb84.azurecr.io/roboshop-${{ inputs.appName }}:${{ github.sha }}
