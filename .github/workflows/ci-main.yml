name: CI ReUse Main
on:
  workflow_call:
    inputs:
      appType:
        required: true
        type: string
      appName:
        required: true
        type: string
    secrets:
      vault_token:
        required: true
jobs:
  Build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - run: npm install
        name: Download NodeJS Dependencies
        if: inputs.appType == 'nodejs'
      - run: mvn package
        name: Download Maven Dependencies
        if: inputs.appType == 'maven'
      - name: Import Secrets
        if: inputs.docker_build == 'true'
        id: import-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: http://vault-int.rdevopsb84.online:8200/
          token: ${{ secrets.vault_token }}
          secrets: |
            roboshop-infra/data/azure-sp ARM_CLIENT_ID | ARM_CLIENT_ID ;
            roboshop-infra/data/azure-sp ARM_CLIENT_SECRET | ARM_CLIENT_SECRET ;
            roboshop-infra/data/azure-sp ARM_TENANT_ID | ARM_TENANT_ID ;
            roboshop-infra/data/azure-sp ARM_SUBSCRIPTION_ID | ARM_SUBSCRIPTION_ID ;
      - name: Docker Build
        if: inputs.docker_build == 'true'
        run: |
          az login --service-principal --username "${ARM_CLIENT_ID}" --password "${ARM_CLIENT_SECRET}" --tenant "${ARM_TENANT_ID}"
          az acr login --name roboshopb84
          docker build -t roboshopb84.azurecr.io/roboshop-${{ inputs.appName }}:${{ github.sha }} .
          docker push roboshopb84.azurecr.io/roboshop-${{ inputs.appName }}:${{ github.sha }}
  Test:
    needs: Build
    uses: raghudevopsb84/roboshop-github-actions/.github/workflows/test.yml@main
    with:
      appType: '${{ inputs.appType }}'
  DockerBuild:
    needs: Test
    uses: raghudevopsb84/roboshop-github-actions/.github/workflows/build.yml@main
    with:
      appType: '${{ inputs.appType }}'
      appName: '${{ inputs.appName }}'
      docker_build: "true"
    secrets:
      vault_token: ${{ secrets.vault_token }}
  Dev_deploy:
    environment: DEV
    runs-on: self-hosted
    needs: DockerBuild
    steps:
      - run: echo OK
  Qa_Deploy:
    environment: QA
    runs-on: self-hosted
    needs: Dev_deploy
    steps:
      - run: echo OK
  Uat_Deploy:
    environment: UAT
    runs-on: self-hosted
    needs: Qa_deploy
    steps:
      - run: echo OK
  Prod_Deploy:
    environment: PROD
    runs-on: self-hosted
    needs: Uat_Deploy
    steps:
      - run: echo OK




